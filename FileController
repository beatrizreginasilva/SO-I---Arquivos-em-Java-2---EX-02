import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class FileController {

    public List<File> listarArquivosPorTamanho(String caminhoDiretorio) throws IllegalArgumentException {
        // Verifica se o caminho é válido
        File diretorio = new File(caminhoDiretorio);
        if (!diretorio.exists() || !diretorio.isDirectory()) {
            throw new IllegalArgumentException("O caminho especificado não é um diretório válido.");
        }

        // Obtém a lista de arquivos no diretório
        File[] arquivos = diretorio.listFiles();
        if (arquivos == null) {
            throw new IllegalArgumentException("Erro ao listar os arquivos no diretório.");
        }

        // Filtra apenas os arquivos e adiciona a uma lista
        List<File> listaArquivos = new ArrayList<>();
        for (File arquivo : arquivos) {
            if (arquivo.isFile()) {
                listaArquivos.add(arquivo);
            }
        }

        // Ordena a lista de arquivos pelo tamanho em bytes, convertendo para MB
        Collections.sort(listaArquivos, Comparator.comparingDouble(File::length));

        return listaArquivos;
    }

    // Método para converter tamanho em bytes para MB
    public double converterParaMB(long bytes) {
        return (double) bytes / (1024 * 1024);
    }
}
